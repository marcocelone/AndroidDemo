# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      - image: google/cloud-sdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      ANDROID_HOME: /usr/local/android-sdk-linux

      -run: sudo ANDROID_HOME=/usr/local/android-sdk-linux ./gradlew dependencies
    
    steps:
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run: |
          sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          sudo gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          sudo gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
    - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
        
      # run tests!
      - run: gradle test