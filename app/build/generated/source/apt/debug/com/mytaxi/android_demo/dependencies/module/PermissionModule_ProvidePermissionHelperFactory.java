// Generated by Dagger (https://google.github.io/dagger).
package com.mytaxi.android_demo.dependencies.module;

import com.mytaxi.android_demo.utils.PermissionHelper;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class PermissionModule_ProvidePermissionHelperFactory
    implements Factory<PermissionHelper> {
  private final PermissionModule module;

  public PermissionModule_ProvidePermissionHelperFactory(PermissionModule module) {
    this.module = module;
  }

  @Override
  public PermissionHelper get() {
    return Preconditions.checkNotNull(
        module.providePermissionHelper(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static PermissionModule_ProvidePermissionHelperFactory create(PermissionModule module) {
    return new PermissionModule_ProvidePermissionHelperFactory(module);
  }

  public static PermissionHelper proxyProvidePermissionHelper(PermissionModule instance) {
    return Preconditions.checkNotNull(
        instance.providePermissionHelper(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
